<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.blackview.admin.dao.UserDao">
  <resultMap id="BaseResultMap" type="cn.com.blackview.admin.domain.User">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <sql id="base_column_list">
    id, account, password, salt, create_time, update_time, deleted
  </sql>
  <insert id="insert" parameterType="cn.com.blackview.admin.domain.User">
    insert into auth_user (account, password,
      salt, create_time, update_time, 
      deleted)
    values ( #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{salt,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{deleted,jdbcType=BIT})
  </insert>
  <select id="find" resultMap="BaseResultMap">
    select <include refid="base_column_list"/>
    from auth_user
  </select>
  <select id="findByAccount" resultMap="BaseResultMap">
    select <include refid="base_column_list"/>
    from auth_user where account = #{account,jdbcType=VARCHAR}
  </select>
  <resultMap id="userInfoWithRole" type="cn.com.blackview.admin.domain.User"  extends="BaseResultMap">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
    <collection property="roleList" ofType="cn.com.blackview.admin.domain.Role" >
      <result column="id" jdbcType="INTEGER" property="id" />
      <result column="role" jdbcType="VARCHAR" property="role" />
      <result column="role_type" jdbcType="INTEGER" property="roleType" />
      <result column="description" jdbcType="VARCHAR" property="description" />
      <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
      <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
      <result column="deleted" jdbcType="BIT" property="deleted" />
    </collection>
  </resultMap>

  <select id="selectUserByUserNameWithRole" resultMap="userInfoWithRole" parameterType="java.lang.String">
    SELECT
    u.*,
    r.id as rid,
    r.role,
    r.role_type,
    r.description,
    r.deleted
    FROM auth_user u,auth_role r,auth_user_role  ru
    <where>
      u.account=#{account}
      and u.id=ru.user_id
      and r.id=ru.role_id
      and r.deleted=0
    </where>
  </select>

</mapper>